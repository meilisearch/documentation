timestamp:
  type: string
  example: '2019-11-20T09:40:33.711324Z'

index:
  type: object
  properties:
    uid:
      type: string
      example: movies
    primaryKey:
      type: string
      nullable: true
      example: movie_id
    createdAt:
      $ref: '#/timestamp'
    updatedAt:
      $ref: '#/timestamp'
  additionalProperties: false
  required:
    - uid
    - primaryKey
    - createdAt
    - updatedAt

document:
  type: object
  additionalProperties: true
  example:
    id: 25684
    title: American Ninja 5
    poster: https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg
    overview: When a scientists daughter is kidnapped, American Ninja, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the ninja.
    release_date: '1993-01-01'

matchesInfo:
  type: object
  properties:
    start:
      type: integer
    length:
      type: integer
  additionalProperties: false
  required:
    - start
    - length

hitDocument:
  type: object
  properties:
    _formatted:
      type: object
      description: Only present if attributesToHighlight is not empty. Copy of normal search result fields with every matching string sequence in the given attribute's field wrapped around an <em> tag.
      additionalProperties: true
    _matchesInfo:
      type: object
      description: Only present if matches=true. Array of all search query occurrences in all fields.
      additionalProperties:
        type: array
        items:
          $ref: '#/matchesInfo'
  additionalProperties: true
  example:
    id: 25684
    title: American Ninja 5
    poster: https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg
    overview: When a scientists daughter is kidnapped, American Ninja, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the ninja.
    release_date: '1993-01-01'
    _formatted:
      id: 25684
      title: American Ninja 5
      poster: https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg
      overview: When a scientists daughter is kidnapped, American <em>Ninja</em>, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the <em>ninja</em>.
      release_date: '1993-01-01'
    _matchesInfo:
      overview:
        - start: 49
          length: 5
        - start: 155
          length: 5

documentId:
  oneOf:
    - type: number
    - type: string
  example: 468219

facetFilters:
  type: array
  description: Facet names and values to filter on.
  items:
    oneOf:
      - type: string
        pattern: ^[^:]+:[^:]+$
      - type: array
        items:
          type: string
          pattern: ^[^:]+:[^:]+$
  example: [director:Mati Diop, [genres:Comedy, genres:Romance]]

queryResponse:
  type: object
  properties:
    hits:
      type: array
      description: Results of the query.
      items:
        $ref: '#/hitDocument'
    offset:
      type: integer
      description: Number of documents skipped.
    limit:
      type: integer
      description: Number of documents to take.
    nbHits:
      type: integer
      description: Total number of matches.
    exhaustiveNbHits:
      type: boolean
      description: Whether `nbHits` is exhaustive.
    facetsDistribution:
      type: object
      additionalProperties:
        type: object
        additionalProperties:
          type: integer
      description: |
        [Distribution of the given facets](/reference/features/search_parameters.html#the-facets-distribution).
      example:
        genres:
          action: 273
          animation: 118
          adventure: 132
          fantasy: 67
          comedy: 475
          mystery: 70
          thriller: 217
    exhaustiveFacetsCount:
      type: boolean
      description: Whether `facetsDistribution` is exhaustive.
    processingTimeMs:
      type: integer
      description: Processing time of the query.
    query:
      type: string
      description: Query originating the response.
      example: ninja
  additionalProperties: false
  required:
    - hits
    - offset
    - limit
    - nbHits
    - exhaustiveNbHits
    - processingTimeMs
    - query

update:
  type: object
  description: |
    MeiliSearch is an asynchronous API. It means that the API does not behave as you would typically expect when handling the request's responses.

    Some operations are put in a queue and will be executed in turn (asynchronously). In this case, the server response contains the identifier to track the execution of the operation.

    [Learn More](/learn/advanced/asynchronous_updates.html).
  properties:
    status:
      description: The state of the operation.
      enum:
        - enqueued
        - processed
        - failed
    updateId:
      type: integer
      description: The id of the update.
    type:
      type: object
      properties:
        name:
          type: string
        number:
          type: integer
      additionalProperties: false
      required:
        - name
        - number
    enqueuedAt:
      $ref: '#/timestamp'
    duration:
      type: number
      description: The number of seconds taken to complete the operation.
    processedAt:
      $ref: '#/timestamp'
    error:
      type: string
      description: |
        A string describing [the error that occurred](/errors/).
  additionalProperties: false
  required:
    - status
    - updateId
    - type
    - enqueuedAt

synonyms:
  type: object
  description: List of associated words treated similarly.
  additionalProperties:
    type: array
    items:
      type: string
  example:
    wolverine: [xmen, logan]
    logan: [wolverine, xmen]
    wow: [world of warcraft]
stopWords:
  type: array
  description: List of words ignored by MeiliSearch when present in search queries.
  items:
    type: string
  example: [of, the, to]
rankingRules:
  type: array
  description: |
    List of ranking rules sorted by order of importance.

    [A list of ordered built-in ranking rules](/learn/core_concepts/relevancy.html#order-of-the-rules).
  items:
    type: string
  example: [typo, words, proximity, attribute, wordsPosition, exactness, asc(release_date), desc(rank)]
attributesForFaceting:
  type: array
  description: |
    Attributes to use as [facets](/reference/features/faceted_search.html).
  items:
    type: string
  example: [genres, director]
distinctAttribute:
  type: string
  description: Search returns documents with distinct (different) values of the given field.
  nullable: true
searchableAttributes:
  type: array
  description: Fields in which to search for matching query words sorted by order of importance.
  items:
    type: string
  example: [title, description, genre]
displayedAttributes:
  type: array
  description: Fields displayed in the returned documents.
  items:
    type: string
  example: [title, description, genre, release_date]

settings:
  type: object
  description: |
    [Learn more about the settings in this guide](/reference/features/settings.html).
  properties:
    synonyms:
      $ref: '#/synonyms'
    stopWords:
      $ref: '#/stopWords'
    rankingRules:
      $ref: '#/rankingRules'
    attributesForFaceting:
      $ref: '#/attributesForFaceting'
    distinctAttribute:
      $ref: '#/distinctAttribute'
    searchableAttributes:
      $ref: '#/searchableAttributes'
    displayedAttributes:
      $ref: '#/displayedAttributes'
  additionalProperties: false
  required:
    - synonyms
    - stopWords
    - rankingRules
    - attributesForFaceting
    - distinctAttribute
    - searchableAttributes
    - displayedAttributes

stats:
  type: object
  properties:
    numberOfDocuments:
      type: integer
    isIndexing:
      type: boolean
    fieldsDistribution:
      type: object
      additionalProperties:
        type: integer
  additionalProperties: false
  required:
    - numberOfDocuments
    - isIndexing
    - fieldsDistribution

dump:
  type: object
  properties:
    uid:
      type: string
      example: 20200929-114144097
    status:
      enum:
        - in_progress
        - failed
        - done
  additionalProperties: false
  required:
    - uid
    - status
