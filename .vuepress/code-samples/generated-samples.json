[
  {
    "samples": {
      "get_one_index_1": "$ curl \\\n  -X GET 'http://localhost:7700/indexes/movies'",
      "list_all_indexes_1": " $ curl \\\n   -X GET 'http://localhost:7700/indexes'",
      "create_an_index_1": "$ curl \\\n  -X POST 'http://localhost:7700/indexes' \\\n  --data '{\n    \"uid\": \"movies\",\n    \"primaryKey\": \"movie_id\"\n  }'",
      "update_an_index_1": "$ curl \\\n  -X PUT 'http://localhost:7700/indexes/movie_review' \\\n  --data '{\n      \"primaryKey\" : \"movie_review_id\"\n  }'",
      "delete_an_index_1": "$ curl \\\n  -X DELETE 'http://localhost:7700/indexes/movies'",
      "get_one_document_1": "$ curl \\\n  -X GET 'http://localhost:7700/indexes/movies/documents/25684'",
      "get_documents_1": "$ curl \\\n  -X GET 'http://localhost:7700/indexes/movies/documents?limit=2'",
      "add_or_replace_documents_1": "$ curl \\\n  -X POST 'http://localhost:7700/indexes/movies/documents' \\\n  --data '[{\n      \"id\": 287947,\n      \"title\": \"Shazam\",\n      \"poster\": \"https://image.tmdb.org/t/p/w1280/xnopI5Xtky18MPhK40cZAGAOVeV.jpg\",\n      \"overview\": \"A boy is given the ability to become an adult superhero in times of need with a single magic word.\",\n      \"release_date\": \"2019-03-23\"\n  }]'",
      "add_or_update_documents_1": "$ curl \\\n  -X POST 'http://localhost:7700/indexes/movies/documents' \\\n  -d 'primaryKey=movieskud'\n  --data '[{\n      \"movieskud\": 287947,\n      \"title\": \"Shazam ⚡️\"\n  }]'",
      "delete_all_documents_1": "curl \\\n  -X DELETE 'http://localhost:7700/indexes/movies/documents'",
      "delete_one_document_1": "curl \\\n  -X DELETE 'http://localhost:7700/indexes/movies/documents/25684'",
      "delete_documents_1": "curl \\\n  -X POST 'http://localhost:7700/indexes/movies/delete-batch' \\\n  --data '[\n      23488,\n      153738,\n      437035,\n      363869\n  ]'",
      "search_1": "$ curl \\\n  -X GET 'http://localhost:7700/indexes/movies/search?q=american%20ninja%205'",
      "get_update_1": "$ curl \\\n  -X GET 'http://localhost:7700/indexes/movies/updates/1'",
      "get_all_updates_1": "$ curl \\\n  -X GET 'http://localhost:7700/indexes/movies/updates'",
      "get_keys_1": "$ curl \\\n  -H \"X-Meili-API-Key: 123\"\n  -X GET 'http://localhost:7700/keys'",
      "get_settings_1": "$ curl \\\n  -X GET 'http://localhost:7700/indexes/movies/settings'",
      "update_settings_1": "$ curl \\\n  -X POST 'http://localhost:7700/indexes/movies/settings' \\\n  --data '{\n      \"rankingRules\": [\n          \"typo\",\n          \"words\",\n          \"proximity\",\n          \"attribute\",\n          \"wordsPosition\",\n          \"exactness\",\n          \"desc(release_date)\",\n          \"desc(rank)\"\n      ],\n      \"distinctAttribute\": \"movie_id\",\n      \"searchableAttributes\": [\n          \"uid\",\n          \"movie_id\",\n          \"title\",\n          \"description\",\n          \"poster\",\n          \"release_date\",\n          \"rank\"\n      ],\n      \"displayedAttributes\": [\n          \"title\",\n          \"description\",\n          \"poster\",\n          \"release_date\",\n          \"rank\"\n      ],\n      \"stopWords\": [\n          \"the\",\n          \"a\",\n          \"an\"\n      ],\n      \"synonyms\": {\n          \"wolverine\": [\"xmen\", \"logan\"],\n          \"logan\": [\"wolverine\"]\n      },\n      \"acceptNewFields\": false\n  }'",
      "reset_settings_1": "$ curl \\\n  -X DELETE 'http://localhost:7700/indexes/movies/settings'",
      "get_synonyms_1": "curl \\\n  -X GET 'http://localhost:7700/indexes/movies/settings/synonyms'",
      "update_synonyms_1": "curl \\\n  -X POST 'http://localhost:7700/indexes/movies/settings/synonyms' \\\n  --data '{\n    \"wolverine\": [\"xmen\", \"logan\"],\n    \"logan\": [\"wolverine\", \"xmen\"],\n    \"wow\": [\"world of warcraft\"]\n  }'",
      "reset_synonyms_1": "curl \\\n  -X DELETE 'http://localhost:7700/indexes/movies/settings/synonyms'",
      "get_stop_words_1": "$ curl \\\n  -X GET 'http://localhost:7700/indexes/movies/settings/stop-words'",
      "update_stop_words_1": "$ curl \\\n  -X POST 'http://localhost:7700/indexes/movies/settings/stop-words' \\\n  --data '[\"the\", \"of\", \"to\"]'",
      "reset_stop_words_1": "$ curl \\\n  -X DELETE 'http://localhost:7700/indexes/movies/settings/stop-words'",
      "get_ranking_rules_1": "$ curl \\\n  -X GET 'http://localhost:7700/indexes/movies/settings/ranking-rules'",
      "update_ranking_rules_1": "$ curl \\\n  -X POST 'http://localhost:7700/indexes/movies/settings/ranking-rules' \\\n  --data '[\n      \"typo\",\n      \"words\",\n      \"proximity\",\n      \"attribute\",\n      \"wordsPosition\",\n      \"exactness\",\n      \"asc(release_date)\",\n      \"desc(rank)\"\n  ]'",
      "reset_ranking_rules_1": "$ curl \\\n  -X DELETE 'http://localhost:7700/indexes/movies/settings/ranking-rules'",
      "get_distinct_attribute_1": "$ curl \\\n  -X GET 'http://localhost:7700/indexes/movies/settings/distinct-attribute'",
      "update_distinct_attribute_1": "$ curl \\\n  -X GET 'http://localhost:7700/indexes/movies/settings/distinct-attribute' \\\n  --data 'movie_id'",
      "reset_distinct_attribute_1": "$ curl \\\n  -X DELETE 'http://localhost:7700/indexes/movies/settings/distinct-attribute'",
      "get_searchable_attributes_1": "$ curl \\\n  -X GET 'http://localhost:7700/indexes/movies/settings/searchable-attributes'",
      "update_searchable_attributes_1": "$ curl \\\n  -X GET 'http://localhost:7700/indexes/movies/settings/searchable-attributes' \\\n  --data '[\n      \"title\",\n      \"description\",\n      \"uid\"\n  ]'",
      "reset_searchable_attributes_1": "$ curl \\\n  -X DELETE 'http://localhost:7700/indexes/movies/settings/searchable-attributes'",
      "get_displayed_attributes_1": "$ curl \\\n  -X GET 'http://localhost:7700/indexes/movies/settings/displayed-attributes'",
      "update_displayed_attributes_1": "$ curl \\\n  -X GET 'http://localhost:7700/indexes/movies/settings/displayed-attributes' \\\n  --data '[\n      \"title\",\n      \"description\",\n      \"release_date\",\n      \"rank\",\n      \"poster\"\n  ]'",
      "reset_displayed_attributes_1": "$ curl \\\n  -X DELETE 'http://localhost:7700/indexes/movies/settings/displayed-attributes'",
      "get_accept_new_fields_1": "$ curl \\\n  -X GET 'http://localhost:7700/indexes/movies/settings/accept-new-fields'",
      "update_accept_new_fields_1": "$ curl \\\n  -X GET 'http://localhost:7700/indexes/movies/settings/accept-new-fields' \\\n  --data 'false'",
      "get_index_stats_1": "$ curl \\\n  -X GET 'http://localhost:7700/indexes/movies/stats'",
      "get_indexes_stats_1": "$ curl \\\n  -X GET 'http://localhost:7700/stats'",
      "get_health_1": "$ curl \\\n  -X GET 'http://localhost:7700/health'",
      "update_health_1": "$ curl \\\n  -X PUT 'http://localhost:7700/health' \\\n  --data '{\n      \"health\": false\n  }'",
      "get_version_1": "$ curl \\\n  -X GET 'http://localhost:7700/version'",
      "get_pretty_sys_info_1": "$ curl \\\n  -X GET 'http://localhost:7700/sys-info/pretty",
      "get_sys_info_1": "$ curl \\\n  -X GET 'http://localhost:7700/sys-info'",
      "distinct_attribute_guide_1": "$ curl\n  -X POST 'http://localhost:7700/indexes/jackets/settings' \\\n  --data '{ \"distinctAttribute\": \"product_id\" }'",
      "field_properties_guide_searchable_1": "$ curl \\\n  -X POST 'http://localhost:7700/indexes/movies/settings' \\\n  --data '{\n      \"searchableAttributes\": [\n          \"uid\",\n          \"movie_id\",\n          \"title\",\n          \"description\",\n          \"poster\",\n          \"release_date\",\n          \"rank\"\n      ]\n  }'",
      "field_properties_guide_displayed_1": "$ curl \\\n  -X POST 'http://localhost:7700/indexes/movies/settings' \\\n  --data '{\n      \"displayedAttributes\": [\n          \"title\",\n          \"description\",\n          \"poster\",\n          \"release_date\",\n          \"rank\"\n      ]\n  }'",
      "filtering_guide_1": "$ curl --get 'http://localhost:7700/indexes/movies/search' \\\n    --data-urlencode 'q=Avengers' \\\n    --data-urlencode 'filters=release_date > 795484800'",
      "filtering_guide_2": "$ curl --get 'http://localhost:7700/indexes/movies/search' \\\n    --data-urlencode 'q=Batman' \\\n    --data-urlencode 'filters=release_date > 795484800 AND (director = \"Tim Burton\" OR director = \"Christopher Nolan\"'",
      "filtering_guide_3": "$ curl --get 'http://localhost:7700/indexes/movies/search' \\\n    --data-urlencode 'q=horror' \\\n    --data-urlencode 'filters=director = \"Jordan Peele\"'",
      "filtering_guide_4": "$ curl --get 'http://localhost:7700/indexes/movies/search' \\\n  --data-urlencode 'q=Planet of the Apes' \\\n  --data-urlencode 'filters=rating >= 3 AND (NOT director = \"Tim Burton\")'",
      "search_parameter_guide_query_1": "$ curl -X GET -G 'http://localhost:7700/indexes/movies/search' \\\n  -d q=shifu",
      "search_parameter_guide_offset_1": "$ curl -X GET -G 'http://localhost:7700/indexes/movies/search' \\\n  -d q=shifu \\\n  -d offset=1",
      "search_parameter_guide_limit_1": "$ curl -X GET -G 'http://localhost:7700/indexes/movies/search' \\\n  -d q=shifu \\\n  -d limit=2",
      "search_parameter_guide_retrieve_1": "$ curl -X GET -G 'http://localhost:7700/indexes/movies/search' \\\n  -d q=shifu \\\n  -d attributesToRetrieve=overview,title",
      "search_parameter_guide_crop_1": "$ curl -X GET -G 'http://localhost:7700/indexes/movies/search' \\\n  -d q=shifu \\\n  -d attributesToCrop=overview \\\n  -d cropLength=10",
      "search_parameter_guide_highlight_1": "$ curl -X GET -G 'http://localhost:7700/indexes/movies/search' \\\n  -d q=shifu \\\n  -d attributesToHighlight=overview",
      "search_parameter_guide_filter_1": "$ curl --get 'http://localhost:7700/indexes/movies/search' \\\n  -d q=n \\\n  --data-urlencode filters='title = Nightshift'",
      "search_parameter_guide_filter_2": "$ curl --get 'http://localhost:7700/indexes/movies/search' \\\n  -d q=shifu \\\n  --data-urlencode filters='title=\"Kung Fu Panda\"'",
      "search_parameter_guide_matches_1": "$ curl -X GET -G 'http://localhost:7700/indexes/movies/search' \\\n  -d q=shifu \\\n  -d attributesToHighlight=overview \\\n  -d matches=true",
      "settings_guide_synonyms_1": "$ curl \\\n  -X POST 'http://localhost:7700/indexes/tops/settings' \\\n  --data '{\n      \"synonyms\": {\n          \"sweater\": [\"jumper\"],\n          \"jumper\": [\"sweater\"]\n      }\n  }'",
      "settings_guide_stop_words_1": "$ curl \\\n  -X POST 'http://localhost:7700/indexes/movies/settings' \\\n  --data '{\n      \"stopWords\": [\n          \"the\",\n          \"a\",\n          \"an\"\n      ]\n  }'",
      "settings_guide_ranking_rules_1": "$ curl \\\n  -X POST 'http://localhost:7700/indexes/movies/settings' \\\n  --data '{\n      \"rankingRules\": [\n          \"typo\",\n          \"words\",\n          \"proximity\",\n          \"attribute\",\n          \"wordsPosition\",\n          \"exactness\",\n          \"asc(release_date)\",\n          \"desc(rank)\"\n      ]\n  }'",
      "settings_guide_distinct_1": "$ curl \\\n  -X POST 'http://localhost:7700/indexes/jackets/settings' \\\n  --data '{\n      \"distinctAttribute\": \"product_id\"\n  }",
      "settings_guide_searchable_1": "$ curl \\\n  -X POST 'http://localhost:7700/indexes/movies/settings' \\\n  --data '{\n      \"searchableAttributes\": [\n          \"uid\",\n          \"movie_id\",\n          \"title\",\n          \"description\",\n          \"poster\",\n          \"release_date\",\n          \"rank\"\n      ]\n  }'",
      "settings_guide_displayed_1": "$ curl \\\n  -X POST 'http://localhost:7700/indexes/movies/settings' \\\n  --data '{\n      \"displayedAttributes\": [\n          \"title\",\n          \"description\",\n          \"poster\",\n          \"release_date\",\n          \"rank\"\n      ]\n  }'",
      "settings_guide_accept_new_fields_1": "$ curl \\\n  -X POST 'http://localhost:7700/indexes/movies/settings' \\\n  --data '{\n      \"acceptNewFields\": false\n  }'",
      "add_movies_json_1": "curl -X POST 'http://127.0.0.1:7700/indexes/movies/documents'\\\n  --data @movies.json",
      "documents_guide_add_movie_1": "curl -X POST `http://localhost:7700/indexes/movies/documents` \\\n  --data '[\n    {\n      \"movie_id\": \"123sq178\",\n      \"title\": \"Amelie Poulain\"\n    }\n  ]'",
      "search_guide_1": "$ curl -X GET -G 'http://localhost:7700/indexes/movies/search' \\\n  -d q=shifu \\\n  -d limit=5 \\\n  -d offset=10",
      "search_guide_2": "$ curl --get 'http://localhost:7700/indexes/movies/search' \\\n  --data-urlencode 'q=Avengers' \\\n  --data-urlencode 'filters=release_date > 795484800'",
      "getting_started_create_index_md": "```bash\n  $ curl \\\n    -X POST 'http://127.0.0.1:7700/indexes' \\\n    --data '{\n    \"uid\" : \"movies\"\n  }'\n```",
      "getting_started_add_documents_md": "```bash\n  $ curl \\\n    -X POST 'http://127.0.0.1:7700/indexes/movies/documents' \\\n    --data @movies.json\n```",
      "getting_started_search_md": "```bash\n$ curl \\\n  -X GET 'http://127.0.0.1:7700/indexes/movies/search?q=botman'\n```"
    },
    "language": "bash",
    "label": "cURL"
  },
  {
    "samples": {
      "get_one_index_1": "client.getIndex('movies').show()",
      "list_all_indexes_1": "client.listIndexes()",
      "create_an_index_1": "client.createIndex({ uid: 'movies' })",
      "update_an_index_1": "client.updateIndex({ uid: 'movies' })",
      "delete_an_index_1": "client.getIndex('movies').deleteIndex()",
      "get_one_document_1": "client.getDocument(25684)",
      "get_documents_1": "client.getindex('movies').getDocuments({ limit: 2 })",
      "add_or_replace_documents_1": "client.getindex('movies').addDocuments([{\n    id: 287947,\n    title: 'Shazam',\n    poster: 'https://image.tmdb.org/t/p/w1280/xnopI5Xtky18MPhK40cZAGAOVeV.jpg',\n    overview: 'A boy is given the ability to become an adult superhero in times of need with a single magic word.',\n    release_date: '2019-03-23'\n}])",
      "add_or_update_documents_1": "client.getindex('movies').updateDocuments([{\n    movieskud: 287947,\n    title: 'Shazam ⚡️'\n}])",
      "delete_all_documents_1": "client.getindex('movies').deleteAllDocuments()",
      "delete_one_document_1": "client.getindex('movies').deleteDocument(25684)",
      "delete_documents_1": "client.getindex('movies').deleteDocuments([23488, 153738, 437035, 363869])",
      "search_1": "client.getIndex('movies').search('American ninja')",
      "get_update_1": "client.getindex('movies').getUpdateStatus(1)",
      "get_all_updates_1": "client.getindex('movies').getAllUpdateStatus()",
      "get_keys": "client.getKeys()",
      "get_settings_1": "client.getindex('movies').getSettings()",
      "update_settings_1": "client.getindex('movies').updateSettings({\n    rankingRules: [\n        'typo',\n        'words',\n        'proximity',\n        'attribute',\n        'wordsPosition',\n        'exactness',\n        'desc(release_date)',\n        'desc(rank)'\n    ],\n    distinctAttribute: 'movie_id',\n    searchableAttributes: [\n        'uid',\n        'movie_id',\n        'title',\n        'description',\n        'poster',\n        'release_date',\n        'rank'\n    ],\n    displayedAttributes: [\n        'title',\n        'description',\n        'poster',\n        'release_date',\n        'rank'\n    ],\n    stopWords: [\n        'the',\n        'a',\n        'an'\n    ],\n    synonyms: {\n        'wolverine': ['xmen', 'logan'],\n        'logan': ['wolverine']\n    },\n    acceptNewFields: false\n})",
      "reset_settings_1": "client.getindex('movies').resetSettings()",
      "get_synonyms_1": "client.getindex('movies').getSynonyms()",
      "update_synonyms_1": "client.getindex('movies').updateSynonym({\n  wolverine: ['xmen', 'logan'],\n  logan: ['wolverine', 'xmen'],\n  wow: ['world of warcraft']\n})",
      "reset_synonyms_1": "client.getindex('movies').resetSynonym()",
      "get_stop_words_1": "client.getindex('movies').getStopWords()",
      "update_stop_words_1": "client.getindex('movies').updateStopWords(['of', 'the', 'to'])",
      "reset_stop_words_1": "client.getindex('movies').resetStopWords()",
      "get_ranking_rules_1": "client.getindex('movies').getRankingRules()",
      "update_ranking_rules_1": "client.getindex('movies').updateRankingRules([\n    'typo',\n    'words',\n    'proximity',\n    'attribute',\n    'wordsPosition',\n    'exactness',\n    'asc(release_date)',\n    'desc(rank)'\n])",
      "reset_ranking_rules_1": "client.getindex('movies').resetRankingRules()",
      "get_distinct_attribute_1": "client.getindex('movies').getDistinctAttribute()",
      "update_distinct_attribute_1": "client.getindex('movies').updateDistinctAttribute('movie_id')",
      "reset_distinct_attribute_1": "client.getindex('movies').resetDistinctAttribute()",
      "get_searchable_attributes_1": "client.getindex('movies').getSearchableAttributes()",
      "update_searchable_attributes_1": "client.getindex('movies').updateSearchableAttributes([\n    'title',\n    'description',\n    'uid'\n])",
      "reset_searchable_attributes_1": "client.getindex('movies').resetSearchableAttributes()",
      "get_displayed_attributes_1": "client.getindex('movies').getDisplayedAttributes()",
      "update_displayed_attributes_1": "client.getindex('movies').updateDisplayedAttributes([\n    'title',\n    'description',\n    'release_date',\n    'rank',\n    'poster'\n])",
      "reset_displayed_attributes_1": "client.getindex('movies').resetDisplayedAttributes()",
      "get_accept_new_fields_1": "client.getindex('movies').getAcceptNewFields()",
      "update_accept_new_fields_1": "client.getindex('movies').updateAcceptNewFields(false)",
      "get_index_stats_1": "client.getindex('movies').getStats()",
      "get_indexes_stats_1": "client.stats()",
      "get_health_1": "client.isHealthy()",
      "update_health_1": "",
      "get_version_1": "client.version()",
      "get_pretty_sys_info_1": "client.systemInformationPretty()",
      "get_sys_info_1": "client.systemInformation()",
      "distinct_attribute_guide_1": "client.getindex('jackets').settings({ distinctAttribute: 'product_id' })",
      "field_properties_guide_searchable_1": "client.getindex('movies').settings({\n      searchableAttributes: [\n          'uid',\n          'movie_id',\n          'title',\n          'description',\n          'poster',\n          'release_date',\n          'rank'\n      ]\n  })",
      "field_properties_guide_displayed_1": "client.getindex('movies').settings({\n    displayedAttributes: [\n        'title',\n        'description',\n        'poster',\n        'release_date',\n        'rank'\n    ]\n})",
      "filtering_guide_1": "client.getIndex('movies').search('Avengers', {\n  filters: 'release_date > 795484800'\n})",
      "filtering_guide_2": "client.getIndex('movies').search('Batman', {\n  filters: 'release_date > 795484800 AND (director = \"Tim Burton\" OR director = \"Christopher Nolan\"'\n})",
      "filtering_guide_3": "client.getIndex('movies').search('horror', {\n  filters: 'director = \"Jordan Peele\"'\n})",
      "filtering_guide_4": "client.getIndex('movies').search('Planet of the Apes', {\n  filters: 'rating >= 3 AND (NOT director = \"Tim Burton\"'\n})",
      "search_parameter_guide_query_1": "client.getIndex('movies').search('shifu')",
      "search_parameter_guide_offset_1": "client.getIndex('movies').search('shifu', {\n  offset: 1\n})",
      "search_parameter_guide_limit_1": "client.getIndex('movies').search('shifu', {\n  limit: 2\n})",
      "search_parameter_guide_retrieve_1": "client.getIndex('movies').search('shifu', {\n  attributesToRetrieve: ['overview', 'title']\n})",
      "search_parameter_guide_crop_1": "client.getIndex('movies').search('shifu', {\n  attributesToCrop: 'overview',\n  cropLength: 10\n})",
      "search_parameter_guide_highlight_1": "client.getIndex('movies').search('shifu', {\n  attributesToHighlight: ['overview']\n})",
      "search_parameter_guide_filter_1": "client.getIndex('movies').search('n', {\n  filters: 'title = Nightshift'\n})",
      "search_parameter_guide_filter_2": "client.getIndex('movies').search('n', {\n  filters: 'title=\"Kung Fu Panda\"'\n})",
      "search_parameter_guide_matches_1": "client.getIndex('movies').search('n', {\n  filters: 'title=\"Kung Fu Panda\"',\n  attributesToHighlight: ['overview'],\n  matches: true\n})",
      "settings_guide_synonyms_1": "client.getindex('tops').settings({\n  synonyms: {\n    sweater: ['jumper'],\n    jumper: ['sweater']\n})",
      "settings_guide_stop_words_1": "client.getindex('movies').settings({\n  stopWords: [\n    'the',\n    'a',\n    'an'\n  ]\n})",
      "settings_guide_ranking_rules_1": "client.getindex('movies').settings({\n  rankingRules: [\n      'typo',\n      'words',\n      'proximity',\n      'attribute',\n      'wordsPosition',\n      'exactness',\n      'asc(release_date)',\n      'desc(rank)'\n  ]\n})",
      "settings_guide_distinct_1": "client.getindex('movies').settings({\n  distinctAttribute: 'product_id'\n})",
      "settings_guide_searchable_1": "client.getindex('movies').settings({\n  searchableAttributes: [\n    'uid',\n    'movie_id',\n    'title',\n    'description',\n    'poster',\n    'release_date',\n    'rank'\n  ]\n})",
      "settings_guide_displayed_1": "client.getindex('movies').settings({\n  displayedAttributes: [\n    'title',\n    'description',\n    'poster',\n    'release_date',\n    'rank'\n  ]\n})",
      "settings_guide_accept_new_fields_1": "client.getindex('movies').settings({\n  acceptNewFields: false\n})",
      "add_movies_json_1": "const movies = require('./movies.json')\nindex.addDocuments(movies).then((res) => console.log(res))",
      "documents_guide_add_movie_1": "index.addDocuments([{\n  \"movie_id\": \"123sq178\",\n  \"title\": \"Amelie Poulain\"\n}])",
      "search_guide_1": "client.getIndex('movies').search('shifu', {\n  limit: 5,\n  offset: 10\n})",
      "search_guide_2": "client.getIndex('movies').search('Avengers', {\n  filters: 'release_date > 795484800',\n})",
      "getting_started_create_index_md": "```bash\n  $ npm install meilisearch\n  # or\n  $ yarn add meilisearch\n```\n\n```javascript\n  const MeiliSearch = require('meilisearch')\n\n  var client = new MeiliSearch({ host: 'http://127.0.0.1:7700' })\n  const index = client\n    .createIndex({ uid: 'movies' })\n    .then((res) => console.log(res))\n```\n\n[About this package](https://github.com/meilisearch/meilisearch-js/)",
      "getting_started_add_documents_md": "```js\n  const movies = require('./movies.json')\n  index.addDocuments(movies).then((res) => console.log(res))\n```\n\n[About this package](https://github.com/meilisearch/meilisearch-js/)",
      "getting_started_search_md": "```js\n  index.search('botman').then((res) => console.log(res))\n```\n\n[About this package](https://github.com/meilisearch/meilisearch-js/)"
    },
    "language": "javascript",
    "label": "javascript"
  }
]